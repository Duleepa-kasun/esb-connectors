<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Copyright (c) 2005-2014, WSO2 Inc. (http://wso2.com) All Rights Reserved.
~
~  WSO2 Inc. licenses this file to you under the Apache License,
~  Version 2.0 (the "License"); you may not use this file except
~  in compliance with the License.
~  You may obtain a copy of the License at
~
~    http://www.apache.org/licenses/LICENSE-2.0
~
~  Unless required by applicable law or agreed to in writing,
~  software distributed under the License is distributed on an
~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~  KIND, either express or implied.  See the License for the
~  specific language governing permissions and limitations
~  under the License.
-->

<template name="init" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="username" />
    <parameter name="password" />
    <parameter name="accessToken"
               description="The access token which allows to make requests to the Delicious API on a behalf of a user."/>
    <parameter name="uri"/>
    <sequence>
        <property name="delicious.username" expression="$func:username" />
        <property name="delicious.password" expression="$func:password" />
        <property name="delicious.accessToken" expression="$func:accessToken"/>



        <filter
                xpath="(not(get-property('delicious.accessToken') = '' or (not(string(get-property('delicious.accessToken'))))))">
            <then>
                <property name="Authorization"
                          expression="fn:concat('Bearer ', get-property('delicious.accessToken'))"
                          scope="transport"
                          type="STRING" />
            </then>

            <else>
                <property name="delicious.for.auth"
                          expression="fn:concat($ctx:delicious.username,':',$ctx:delicious.password)" />

                <property name="Authorization"
                          expression="fn:concat('Basic ', base64Encode($ctx:delicious.for.auth))"
                          scope="transport" />
            </else>
        </filter>






        <!--filter
                xpath="(not(get-property('delicious.accessToken') = '' or (not(string(get-property('delicious.accessToken'))))))">
            <then>

                <property name="Authorization"
                          expression="fn:concat('Bearer ', get-property('delicious.accessToken'))"
                          scope="transport"
                          type="STRING" />

            </then>
            <else>
                <property name="delicious.for.auth"
                          expression="fn:concat($ctx:delicious.username,':',$ctx:delicious.password)" />

                <property name="Authorization"
                          expression="fn:concat('Basic ', base64Encode($ctx:delicious.for.auth))"
                          scope="transport" />
            </else>

        </filter-->

        <property name="uri.var.delicious.url" expression="$func:uri" />

    </sequence>
</template>
