<?xml version="1.0" encoding="UTF-8"?>
<proxy xmlns="http://ws.apache.org/ns/synapse"
       name="delicious"
       transports="http,https"
       startOnLoad="true"
       trace="disable"
       statistics="disable">
    <target>
        <inSequence>

            <property name="uri" expression="json-eval($.json_payload.Apiurl)"/>
            <property name="password" expression="json-eval($.json_payload.password)"/>
            <property name="username" expression="json-eval($.json_payload.username)"/>
            <property name="method" expression="json-eval($.json_payload.method)"/>



            <delicious.init>
                <username>{$ctx:username}</username>
                <password>{$ctx:password}</password>
                <uri>{$ctx:uri}</uri>
            </delicious.init>

            <switch source="get-property('method')">

                <case regex="postGetAll">
                    <property name="testType" expression="json-eval($.json_payload.testType)"/>
                    <filter
                            xpath="(get-property('testType') = 'optional' )">
                        <then>
                            <property name="tag_separator" expression="json-eval($.json_payload.tag_separator)"/>
                            <property name="results" expression="json-eval($.json_payload.results)"/>
                        </then>
                    </filter>

                    <delicious.getAllBookmarks>
                        <tag_separator>{$ctx:tag_separator}</tag_separator>
                        <results>{$ctx:results}</results>
                    </delicious.getAllBookmarks>
                </case>

                <case regex="addNewPost">
                    <property name="inputUrl" expression="json-eval($.json_payload.inputUrl)"/>
                    <property name="inputDescription" expression="json-eval($.json_payload.inputDescription)"/>
                    <property name="testType" expression="json-eval($.json_payload.testType)"/>

                    <filter
                            xpath="(get-property('testType') = 'optional' )">
                        <then>
                            <property name="inputExtended" expression="json-eval($.json_payload.inputExtended)"/>
                            <property name="inputTags" expression="json-eval($.json_payload.inputTags)"/>
                        </then>
                    </filter>

                    <delicious.addNewPost>
                        <inputUrl>{$ctx:inputUrl}</inputUrl>
                        <inputDescription>{$ctx:inputDescription}</inputDescription>
                        <inputExtended>{$ctx:inputExtended}</inputExtended>
                        <inputTags>{$ctx:inputTags}</inputTags>
                    </delicious.addNewPost>
                </case>

                <case regex="postAllHashes">
                    <delicious.postAllHashes/>
                </case>

                <case regex="getDates">

                    <property name="testType" expression="json-eval($.json_payload.testType)"/>

                    <filter
                            xpath="(get-property('testType') = 'optional' )">
                        <then>
                            <property name="tag" expression="json-eval($.json_payload.tag)"/>
                        </then>
                    </filter>

                    <delicious.getDates>
                        <datesTag>{$ctx:tag}</datesTag>
                    </delicious.getDates>
                </case>

                <case regex="deletePost">
                    <property name="delUrl" expression="json-eval($.json_payload.delUrl)"/>
                    <delicious.deletePost>
                        <delUrl>{$ctx:delUrl}</delUrl>
                    </delicious.deletePost>
                </case>

                <case regex="getPosts">

                    <property name="testType" expression="json-eval($.json_payload.testType)"/>

                    <filter
                            xpath="(get-property('testType') = 'optional' )">
                        <then>
                            <property name="tag_separator" expression="json-eval($.json_payload.tag_separator)"/>
                            <property name="tag" expression="json-eval($.json_payload.tag)"/>
                            <property name="meta" expression="json-eval($.json_payload.meta)"/>
                        </then>
                    </filter>

                    <delicious.getPosts>
                        <gettag>{$ctx:tag}</gettag>
                        <gettag_separator>{$ctx:tag_separator}</gettag_separator>
                        <getmeta>{$ctx:meta}</getmeta>
                    </delicious.getPosts>
                </case>

                <case regex="getRecentPosts">
                    <property name="testType" expression="json-eval($.json_payload.testType)"/>
                    <filter
                            xpath="(get-property('testType') = 'optional' )">
                        <then>
                            <property name="tag" expression="json-eval($.json_payload.tag)"/>
                            <property name="count" expression="json-eval($.json_payload.count)"/>
                        </then>
                    </filter>

                    <delicious.getRecentPosts>
                        <recentTag>{$ctx:tag}</recentTag>
                        <recentCount>{$ctx:count}</recentCount>
                    </delicious.getRecentPosts>
                </case>

                <case regex="suggestPopularTags">
                    <property name="url" expression="json-eval($.json_payload.url)"/>
                    <delicious.suggestPopularTags>
                        <url>{$ctx:url}</url>
                    </delicious.suggestPopularTags>
                </case>

                <case regex="lastUpdatedTime">
                    <delicious.lastUpdatedTime/>
                </case>









                <case regex="getTags">
                    <delicious.getTags/>
                </case>

                <case regex="allTagsBundles">
                    <property name="testType" expression="json-eval($.json_payload.testType)"/>

                    <filter
                            xpath="(get-property('testType') = 'optional' )">
                        <then>
                            <property name="bundle" expression="json-eval($.json_payload.bundle)"/>
                        </then>
                    </filter>

                    <delicious.allTagsBundles>
                        <bundle>{$ctx:bundle}</bundle>
                    </delicious.allTagsBundles>
                </case>

                <case regex="setTagsBundles">
                    <property name="bundle" expression="json-eval($.json_payload.bundle)"/>
                    <property name="tags" expression="json-eval($.json_payload.tags)"/>
                    <delicious.setTagsBundles>
                        <bundle>{$ctx:bundle}</bundle>
                        <tags>{$ctx:tags}</tags>
                    </delicious.setTagsBundles>
                </case>

                <case regex="deleteTagsBundles">
                    <property name="bundle" expression="json-eval($.json_payload.delBundle)"/>
                    <delicious.deleteTagsBundles>
                        <bundle>{$ctx:bundle}</bundle>
                    </delicious.deleteTagsBundles>
                </case>

            </switch>

            <respond/>
        </inSequence>
        <outSequence>
            <send/>
        </outSequence>
        <faultSequence/>
    </target>
</proxy>
